# -*- coding: utf-8 -*-
"""
Created on Fri Dec 16 11:56:55 2022

@author: vixey foxwish
"""
# Solved 12/16/2022
# Runtime 181ms Beats 97.16%
# Memory 14.4 MB Beats 15.98%

# =============================================================================
# 
# 2215. Find the Difference of Two Arrays
# 
# Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:
# 
# answer[0] is a list of all distinct integers in nums1 which are not present in nums2.
# answer[1] is a list of all distinct integers in nums2 which are not present in nums1.
# Note that the integers in the lists may be returned in any order.
# 
#  
# 
# Example 1:
# 
# Input: nums1 = [1,2,3], nums2 = [2,4,6]
# Output: [[1,3],[4,6]]
# Explanation:
# For nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 
# and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].
# 
# For nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 
# and nums2[2] = 6 are not present in nums2. Therefore, answer[1] = [4,6].
# 
# Example 2:
# 
# Input: nums1 = [1,2,3,3], nums2 = [1,1,2,2]
# Output: [[3],[]]
# Explanation:
# For nums1, nums1[2] and nums1[3] are not present in nums2. Since nums1[2] == nums1[3], 
# their value is only included once and answer[0] = [3].
# Every integer in nums2 is present in nums1. Therefore, answer[1] = [].
#  
# 
# Constraints:
# 
# 1 <= nums1.length, nums2.length <= 1000
# -1000 <= nums1[i], nums2[i] <= 1000
# =============================================================================

# since we want only distinct integers and don't care about the order, use sets
class Solution:
    def findDifference(self, nums1: List[int], nums2: List[int]) -> List[List[int]]:  
        # get the sets of each number in nums1 and nums2 as set1 and set2
        set1 = set(nums1)
        set2 = set(nums2)
        # get the sets of numbers in 1 but not in 2, and vice versa
        in_1_not_2 = set1 - set2
        in_2_not_1 = set2 - set1
        # converts these sets back into lists
        list_in_1_not_2 = list(in_1_not_2)
        list_in_2_not_1 = list(in_2_not_1)
        # return final answer
        return [list_in_1_not_2, list_in_2_not_1]
