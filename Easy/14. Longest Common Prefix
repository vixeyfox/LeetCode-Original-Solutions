# -*- coding: utf-8 -*-
"""
Created on Fri Oct 14 19:14:31 2022

@author: vixey foxwish
"""
# Solved 4/4/2023
# Runtime 33 ms Beats 76.70%
# Memory 13.9 MB Beats 37%

# =============================================================================
# 
# 14. Longest Common Prefix
# Easy
# Write a function to find the longest common prefix string amongst an array of strings.
# 
# If there is no common prefix, return an empty string "".

# Example 1:
# 
# Input: strs = ["flower","flow","flight"]
# Output: "fl"
# Example 2:
# 
# Input: strs = ["dog","racecar","car"]
# Output: ""
# Explanation: There is no common prefix among the input strings.

# Constraints:
# 
# 1 <= strs.length <= 200
# 0 <= strs[i].length <= 200
# strs[i] consists of only lowercase English letters.
# =============================================================================

# try again 4/4/2023
strs = ["flower","flow","flight"]
answer = ''
shortest = len(strs[0])
# get the shortest string's length, the max len of any shared prefix of course
for string in strs:
    this_len = len(string)
    # if it sets a new record for shortest string
    if this_len < shortest:
        shortest = this_len
        
for length in range(1, shortest+1):
    # range from 1 to shortest, inclusive
    this_prefix = strs[0][:length]
# take the first string arbitrarily, doesn't matter which if all match there
    looks_good = 0
    # how many match it (will check all again, incl. the first, below...)
    for string in strs:
        if string[0:length] == this_prefix:
            # so far so good, count that 
            looks_good += 1
    # did they all match?
    if looks_good == len(strs):
        answer = this_prefix
# at the end, the answer is either '' or this_prefix
return len(answer)


