# -*- coding: utf-8 -*-
"""
Created on Tue Dec 27 15:10:34 2022

@author: vixey foxwish
"""
# Solved 12/27/2022
# Runtime 36 ms Beats 79.82%
# Memory 13.7 MB Beats 95.83%

# =============================================================================
# 2351. First Letter to Appear Twice
# Given a string s consisting of lowercase English letters, return the first letter to appear twice.
# 
# Note:
# A letter a appears twice before another letter b if the second occurrence of a is before the second occurrence of b.
# s will contain at least one letter that appears twice.
#  
# Example 1:
# 
# Input: s = "abccbaacz"
# Output: "c"
# Explanation:
# The letter 'a' appears on the indexes 0, 5 and 6.
# The letter 'b' appears on the indexes 1 and 4.
# The letter 'c' appears on the indexes 2, 3 and 7.
# The letter 'z' appears on the index 8.
# The letter 'c' is the first letter to appear twice, because out of all the letters the index of its second occurrence is the smallest.
# Example 2:
# 
# Input: s = "abcdd"
# Output: "d"
# Explanation:
# The only letter that appears twice is 'd' so we return 'd'.
#  
# Constraints:
# 2 <= s.length <= 100
# s consists of lowercase English letters.
# s has at least one repeated letter.
# =============================================================================

s = 'abccbaacz'
# Make a set that stores each letter as it appears in the string s
appeared_before = set()
# Use a for loop to iterate througth the letters in string s
for letter in s:
    if letter not in appeared_before:
# If it has not been seen already (is not in that set), then add it to the set
        appeared_before.add(letter)
    elif letter in appeared_before:
# Else if (Elif) it has been seen already (is in that set), then as it occurs twice,
# return that letter as the answer
        return letter
       # print(letter)


